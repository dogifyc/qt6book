(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{340:function(t,s,e){t.exports=e.p+"assets/img/basicscene.bdf381db.png"},524:function(t,s,e){t.exports=e.p+"assets/img/meshes.32579992.png"},525:function(t,s,e){t.exports=e.p+"assets/img/light_directional.47b27c09.png"},526:function(t,s,e){t.exports=e.p+"assets/img/light_point.2039c01f.png"},527:function(t,s,e){t.exports=e.p+"assets/img/light_spot.64e88bda.png"},655:function(t,s,e){"use strict";e.r(s);var a=e(24),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"the-basics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-basics"}},[t._v("#")]),t._v(" The Basics")]),t._v(" "),a("p",[t._v("In this section we will walk through the basics of Qt Quick 3D. This includes working with the built in shapes (meshes), using lights, and transformations in 3D.")]),t._v(" "),a("h2",{attrs:{id:"a-basic-scene"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-basic-scene"}},[t._v("#")]),t._v(" A Basic Scene")]),t._v(" "),a("p",[t._v("A 3D scene consists of a few standard elements:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("View3D")]),t._v(", which is the top level QML element representing the entire 3D scene.")]),t._v(" "),a("li",[a("code",[t._v("SceneEnvironment")]),t._v(", controls how the scene is rendered, including how the background, or sky box, is rendered.")]),t._v(" "),a("li",[a("code",[t._v("PerspectiveCamera")]),t._v(", the camera in the scene. Can also be a "),a("code",[t._v("OrthographicCamera")]),t._v(", or even a custom camera with a custom projection matrix.")])]),t._v(" "),a("p",[t._v("In addition to this, the scene usually contains "),a("code",[t._v("Model")]),t._v(" instances representing objects in the 3D space, and lights.")]),t._v(" "),a("p",[t._v("We will look at how these elements interact by creating the scene shown below.")]),t._v(" "),a("p",[a("img",{attrs:{src:e(340),alt:"image"}})]),t._v(" "),a("p",[t._v("First of all, the QML code is setup with a "),a("code",[t._v("View3D")]),t._v(" as the main element, filling the window. We also import the "),a("code",[t._v("QtQuick3D")]),t._v(" module.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("View3D")]),t._v(" element can be seen as any other Qt Quick element, just that inside of it, the 3D contents will be rendered.")]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick3D\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Window")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("640")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("480")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("visible")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Basic Scene"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("View3D")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("anchors.fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("parent")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Then we setup the "),a("code",[t._v("SceneEnvironment")]),t._v(" with a solid background colour. This is done inside the "),a("code",[t._v("View3D")]),t._v(" element.")]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SceneEnvironment")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clearColor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#222222"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("backgroundMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("SceneEnvironment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Color")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("The "),a("code",[t._v("SceneEnvironment")]),t._v(" can be used to control a lot more rendering parameters, but for now, we only use it to set a solid background colour.")]),t._v(" "),a("p",[t._v("The next step is to add "),a("em",[t._v("meshes")]),t._v(" to the scene. A mesh represents an object in 3D space. Each mesh is created using a "),a("code",[t._v("Model")]),t._v(" QML element.")]),t._v(" "),a("p",[t._v("A model can be used to load 3D assets, but there are a few built-in meshes allowing us to get started without involving the complexity of 3D assets management. In the code below, we create a "),a("code",[t._v("#Cone")]),t._v(" and a "),a("code",[t._v("#Sphere")]),t._v(".")]),t._v(" "),a("p",[t._v('In addition to the shape of the mesh, we position them in 3D space and provide them with a material with a simple, diffuse base colour. We will discuss materials more in the [Materials and Light]("Materials and Lights") section')]),t._v(" "),a("p",[t._v("When positioning elements in 3D space, coordinates are expressed as "),a("code",[t._v("Qt.vector3d(x, y, z)")]),t._v(" where the "),a("code",[t._v("x")]),t._v(" axis controls the horizontal movement, "),a("code",[t._v("y")]),t._v(" is the vertical movement, and "),a("code",[t._v("z")]),t._v(" the how close or far away something is.")]),t._v(" "),a("p",[t._v("By default, the positive direction of the "),a("code",[t._v("x")]),t._v(" axis is to the right, positive "),a("code",[t._v("y")]),t._v(" points upwards, and positive "),a("code",[t._v("z")]),t._v(" out of the screen. I say default, because this depends on the projection matrix of the camera.")]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Model")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("Qt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vector3d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("scale")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("Qt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vector3d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#Cone"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("materials")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" PrincipledMaterial "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("baseColor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yellow"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Model")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("Qt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vector3d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#Sphere"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("materials")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" PrincipledMaterial "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("baseColor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"green"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("Once we have lights in the scene we add a "),a("code",[t._v("DirectionalLight")]),t._v(", which is a light that works much like the sun. It adds an even light in a pre-determined direction. The direction is controlled using the "),a("code",[t._v("eulerRotation")]),t._v(" property where we can rotate the light direction around the various axes.")]),t._v(" "),a("p",[t._v("By setting the "),a("code",[t._v("castsShadow")]),t._v(" property to "),a("code",[t._v("true")]),t._v(" we ensure that the light generates shadows as can be seen on cone, where the shadow from the sphere is visible.")]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectionalLight")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("eulerRotation.x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("eulerRotation.y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("castsShadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("The last piece of the puzzle is to add a camera to the scene. There are various cameras for various perspectives, but for a realistic projection, the "),a("code",[t._v("ProjectionCamera")]),t._v(" is the one to use.")]),t._v(" "),a("p",[t._v("In the code, we place the camera using the "),a("code",[t._v("position")]),t._v(" property. It is then possible to direct the camera using the "),a("code",[t._v("eulerRotation")]),t._v(" property, but instead we call the "),a("code",[t._v("lookAt")]),t._v(" method from the "),a("code",[t._v("Component.onCompleted")]),t._v(" signal handler. This rotates the camera to look at a specific direction once it has been created and initialized.")]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PerspectiveCamera")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("Qt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vector3d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("Component.onCompleted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Qt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vector3d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("The resulting scene can be seen below.")]),t._v(" "),a("p",[a("img",{attrs:{src:e(340),alt:"image"}})]),t._v(" "),a("p",[t._v("So, all in all, a minimal scene consists of a "),a("code",[t._v("View3D")]),t._v(" with an "),a("code",[t._v("SceneEnvironment")]),t._v(", something to look at, e.g. a "),a("code",[t._v("Model")]),t._v(" with a mesh, a light source, e.g. a "),a("code",[t._v("DirectionalLight")]),t._v(", and something to look with, e.g. a "),a("code",[t._v("PerspectiveCamera")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"the-built-in-meshes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-built-in-meshes"}},[t._v("#")]),t._v(" The Built-in Meshes")]),t._v(" "),a("p",[t._v("In the previous example, we used the built-in cone and sphere. Qt Quick 3D comes with the following built in meshes:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("#Cube")])]),t._v(" "),a("li",[a("code",[t._v("#Cone")])]),t._v(" "),a("li",[a("code",[t._v("#Sphere")])]),t._v(" "),a("li",[a("code",[t._v("#Cylinder")])]),t._v(" "),a("li",[a("code",[t._v("#Rectangle")])])]),t._v(" "),a("p",[t._v("These are all shown in the illustration below. (top-left: Cube, top-right: Cone, center: Sphere, bottom-left: Cylinder, bottom-right: Rectangle)")]),t._v(" "),a("p",[a("img",{attrs:{src:e(524),alt:"image"}})]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),a("p",[t._v("One caveat is that the "),a("code",[t._v("#Rectangle")]),t._v(" is one-sided. That means that it is only visible from one direction. This means that the "),a("code",[t._v("eulerRotation")]),t._v(" property is important.")])]),t._v(" "),a("p",[t._v("When working with real scenes, the meshes are exported from a design tool and then imported into the Qt Quick 3D scene. We look at this in more detail in the "),a("RouterLink",{attrs:{to:"/ch12-qtquick3d/assets.html"}},[t._v("Working with Assets")]),t._v(" section.")],1),t._v(" "),a("h2",{attrs:{id:"lights"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lights"}},[t._v("#")]),t._v(" Lights")]),t._v(" "),a("p",[t._v("Just as with meshes, Qt Quick 3D comes with a number of pre-defined light sources. These are used to light the scene in different ways.")]),t._v(" "),a("p",[t._v("The first one, "),a("code",[t._v("DirectionalLight")]),t._v(", should be familiar from our previous example. It works much as the sun, and casts light uniformly over the scene in a given direction. If the "),a("code",[t._v("castsShadow")]),t._v(" property is set to "),a("code",[t._v("true")]),t._v(", the light will cast shadows, as shown in the illustration below. This property is available for all the light sources.")]),t._v(" "),a("p",[a("img",{attrs:{src:e(525),alt:"image"}})]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectionalLight")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("eulerRotation.x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("210")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("eulerRotation.y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("castsShadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("The next light source is the "),a("code",[t._v("PointLight")]),t._v(". It is a light that eminates from a given point in space and then falls off towards darkness based on the values of the "),a("code",[t._v("constantFade")]),t._v(", "),a("code",[t._v("linearFade")]),t._v(", and "),a("code",[t._v("quadraticFace")]),t._v(" properties, where the light is calculated as "),a("code",[t._v("constantFade + distance * (linearFade * 0.01) + distance^2 * (quadraticFade * 0.0001)")]),t._v(". The default values are "),a("code",[t._v("1.0")]),t._v(" constant and quadratic fade, and "),a("code",[t._v("0.0")]),t._v(" for the linear fade, meaning that the light falls off according to the inverse square law.")]),t._v(" "),a("p",[a("img",{attrs:{src:e(526),alt:"image"}})]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PointLight")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("Qt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vector3d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("150")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("castsShadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("The last of the light sources is the "),a("code",[t._v("SpotLight")]),t._v(" which emits a cone of light in a given direction, much like a real world spotlight. The cone consists of an inner and an outer cone. The width of these is controlled by the "),a("code",[t._v("innerConeAngle")]),t._v(" and "),a("code",[t._v("coneAngle")]),t._v(", specified in degrees between zero and 180 degrees.")]),t._v(" "),a("p",[t._v("The light in the inner cone behaves much like a "),a("code",[t._v("PointLight")]),t._v(" and can be controlled using the "),a("code",[t._v("constantFade")]),t._v(", "),a("code",[t._v("linearFade")]),t._v(", and "),a("code",[t._v("quadraticFace")]),t._v(" properties. In addition to this, the light fades towards darkness as it approaches the outer cone, controlled by the "),a("code",[t._v("coneAngle")]),t._v(".")]),t._v(" "),a("p",[a("img",{attrs:{src:e(527),alt:"image"}})]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpotLight")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("Qt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vector3d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("eulerRotation.x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("brightness")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("ambientColor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("Qt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rgba")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("castsShadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("In addition to the "),a("code",[t._v("castsShadow")]),t._v(" property, all lights also has the commonly used properties "),a("code",[t._v("color")]),t._v(" and "),a("code",[t._v("brightness")]),t._v(" which control the color and intensity of the light emitted. The lights also has an "),a("code",[t._v("ambientColor")]),t._v(" property defining a base color to be applied to materials, before they are lit by the light source. This property is set to black by default, but can be used to provide a base lighting in a scene.")]),t._v(" "),a("p",[t._v("In the examples this far, we've only used one light source at a time, but it is of course possible to combine multiple light sources in a single scene.")])])}),[],!1,null,null,null);s.default=n.exports}}]);